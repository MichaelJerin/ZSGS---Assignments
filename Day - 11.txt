Day -> 11

// 1. Write a Java program to read the contents of a text file and display it on the console.

package org.example;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

public class Question_01 {
    public static void main(String[] args) throws IOException {

        BufferedReader bf = null;

        try {
            File file = new File("file.txt");
            if (file.exists()) {
                System.out.println("File already Exists " + file.getName());
            } else {
                file.createNewFile();
                System.out.println("File Created");
            }

            bf = new BufferedReader(new FileReader("file.txt"));
            String line;
            while ((line = bf.readLine()) != null) {
                System.out.println(line);
            }
            bf.close();
        } catch (IOException e) {
            System.out.println("Something Wrong");
        } finally {
            if(bf == null) {
                bf.close();
            }
        }
    }
}


/* 2. Write a Menu driven Java program a) to read content from the user and write it into another file and b) from the file to another file c) to modify the content of a file 
d) to search for a particular word in a file and display how many times it appears e) read the content(List of Electronic Products) of a .txt file and copy them to the .csv file. */

package org.example;

import java.io.*;
import java.util.Scanner;

public class Question_02 {

    Scanner in = new Scanner(System.in);

    public static void main(String[] args) {
        Question_02 q = new Question_02();
        q.menu();
    }

    public void menu() {
        while (true) {
            System.out.println("1 FOR READ INPUT FROM USER AND WRITE TO FILE");
            System.out.println("2 FOR READ FORM ONE FILE AND WRITE IT ON ANOTHER FILE");
            System.out.println("3 FOR MODIFY A CONTENT OF A FILE");
            System.out.println("4 FOR SEARCH A WORD IN A FILE AND DISPLAY HOW MANY TIME IT APPEARS");
            System.out.println("5 FOR COPY .TXT TO .CSV");
            System.out.println("6. FOR EXIT");

            System.out.print("Enter Choice : " );
            int choice = in.nextInt();
            in.nextLine();

            switch (choice) {
                case 1:
                    write();
                    break;
                case 2:
                    copy();
                    break;
                case 3:
                    modify();
                    break;
                case 4:
                    count();
                    break;
                case 5:
                    toCSV();
                    break;
                case 6:
                    System.out.println();
                    System.exit(0);
            }
        }
    }

    public void write() {
       File file = new File("D:\\Mikey\\learning\\Assignments\\Day-11\\file.txt");

        try (FileWriter writer = new FileWriter(file)) {
            System.out.print("Enter File Content : ");
            while (true) {
                String line = in.nextLine();
                if (line.equals("exit")) {
                    break;
                }
                writer.write(line + System.lineSeparator());
            }
            System.out.println("Written Successfully...");
        } catch (IOException e) {
            System.out.println("Error on Writing : " + e.getMessage());
        }
    }

    public void copy() {
        String from = "D:\\Mikey\\learning\\Assignments\\Day-11\\file.txt";
        String to = "D:\\Mikey\\learning\\Assignments\\Day-11\\to.txt";

        try (FileReader fr = new FileReader(from);
             FileWriter fw = new FileWriter(to)) {

            int character;

            while ((character = fr.read()) != -1) {
                fw.write(character);
            }
            System.out.println("Successful");

        } catch (IOException ie) {
            System.out.println("Exception : " + ie.getMessage());
        }
    }

    public void modify() {
        File file = new File("D:\\Mikey\\learning\\Assignments\\Day-11\\file.txt");

        System.out.println("Enter word which need modification : ");
        String word = in.nextLine();

        System.out.println("Enter new word for modification : ");
        String replace = in.nextLine();

        StringBuilder pam = new StringBuilder();

        try(BufferedReader bf = new BufferedReader(new FileReader(file))) {
            String line;

            while((line = bf.readLine()) != null) {
                pam.append(line.replace(word, replace)).append("\n");
            }
        } catch (IOException e) {
            System.out.println("Error : " + e.getMessage());
            return;
        }

        try (FileWriter fw = new FileWriter(file)) {
            fw.write(pam.toString());
            System.out.println("Modified Successfully");
        } catch (IOException e) {
            System.out.println("Error : " + e.getMessage());
        }
    }

    public void count() {
        File file = new File("D:\\Mikey\\learning\\Assignments\\Day-11\\file.txt");

        System.out.print("Enter word to search : ");
        String word = in.nextLine();

        int count = 0;

        try (BufferedReader br = new BufferedReader(new FileReader(file))){
            String line;

            while ((line = br.readLine()) != null) {
                String[] words = line.split("\\s+");
                for (String w : words) {
                    if(w.equalsIgnoreCase(word)) {
                        count++;
                    }
                }
            }
            System.out.println("Word : " + word + " Count : " + count);
        } catch (IOException e) {
            System.out.println("Error : " + e.getMessage());
        }
    }

    public void toCSV() {
        File file = new File("D:\\Mikey\\learning\\Assignments\\Day-11\\file.txt");
        File csv = new File("D:\\Mikey\\learning\\Assignments\\Day-11\\one.csv");

        try(BufferedReader bf = new BufferedReader(new FileReader(file));
            FileWriter fw = new FileWriter(csv)) {
            String line;

            while((line = bf.readLine()) != null) {
                String[] words = line.trim().split("\\s+");
                String csvv = String.join(",", words);
                fw.write(csvv + "\n");
            }
            System.out.println("Successfully");
        } catch (IOException e) {
            System.out.println("Exception : " + e.getMessage());
        }
    }
}


/* 3. Write a Java program that reads a file and prints the number of lines, words, and characters. */

package org.example;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

public class Question_03 {
    public static void main(String[] args) throws IOException {

        BufferedReader bf = null;
        Scanner scanner = null;
        int lineCount = 0;
        int wordCount = 0;
        int charCount = 0;

        try {
            bf = new BufferedReader(new FileReader("file.txt"));
            String line;
            while ((line = bf.readLine()) != null) {
                lineCount++;
                int a = line.length();
                 charCount += a;
            }

            System.out.println("No. of lines : " + lineCount);
            System.out.println("No. of characters : " + charCount);

            File file = new File("file.txt");
            scanner = new Scanner(file);

            while (scanner.hasNext()) {
                wordCount++;
                scanner.next();
            }

            System.out.println("No. of Words : " + wordCount);

        } finally {
           bf.close();
           scanner.close();
        }
    }
}


/* 4. Write a Java program to append a text read from the user to an existing file without overwriting the original content. */

package org.example;

import java.io.FileWriter;
import java.io.IOException;

public class Question_04 {
    public static void main(String[] args) {
        try {
            FileWriter fw = new FileWriter("file.txt",true);
            fw.write("\nGood Bye");
            fw.close();
            System.out.println("Written Successfully");
        } catch (IOException e) {
            System.out.println("Problem : " + e.getMessage());
        }
    }
}


/* 5. Design a Java application to manage a product inventory system using file handling and object serialization.
Create a class Product with the following attributes:
--->int productId
--->String name
--->double price
--->int quantity
a. Ensure the class implements the Serializable interface.
b. Methods:
--->Add a Product: Accept product details from the user and write the object to a file (products.dat).
--->View All Products: Read all product objects from the file and display them.
--->Search Product by ID: Search for a product by productId in the file and display its details if found.
--->Update Product: Locate a product in the file using the ID, update its price or quantity, and save the changes back to the file.
--->Delete Product: Remove a product object from the file by ID (involves rewriting the file).
--->Use proper exception handling and ensure that object serialization and deserialization are handled safely and efficiently. */

package org.example;

import java.io.*;

public class Product implements Serializable {
    int productId;
    String name;
    double price;
    int quantity;

    public Product(int productId, String name, double price, int quantity) {
        this.productId = productId;
        this.name = name;
        this.price = price;
        this.quantity = quantity;
    }

    public Product() {

    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public int getProductId() {
        return productId;
    }

    public void setProductId(int productId) {
        this.productId = productId;
    }

    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    @Override
    public String toString() {
        return "Product id : " + productId + "\nName : " + name + "\nPrice : " + price + "\nQuantity : " + quantity;
    }
}

package org.example;

import java.io.*;
import java.util.ArrayList;
import java.util.Scanner;

public class ProductList {

    static String file = "D:\\Mikey\\learning\\Assignments\\Day-11\\products.dat";
    static Scanner in = new Scanner(System.in);

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        while (true) {
            System.out.println("1. FOR ADD PRODUCT : ");
            System.out.println("2. FOR VIEW ALL PRODUCT : ");
            System.out.println("3. FOR SEARCH PRODUCT : ");
            System.out.println("4. FOR UPDATE PRODUCT : ");
            System.out.println("5. DELETE PRODUCT : ");
            System.out.println("6. EXIT");

            System.out.println("Enter choice : ");
            int choice = in.nextInt();
            in.nextLine();

            switch (choice) {
                case 1:
                    addProduct();
                    break;
                case 2:
                    viewProduct();
                    break;
                case 3:
                    searchProduct();
                    break;
                case 4:
                    updateProduct();
                    break;
                case 5:
                    deleteProduct();
                    break;
                case 6:
                    System.exit(0);
                default:
                    System.out.println("Enter valid choice...");
            }
        }
    }

    public static void addProduct() {
        try {
            System.out.print("Enter Product id : ");
            int productId = in.nextInt();
            in.nextLine();
            System.out.print("Enter Name : ");
            String name= in.nextLine();
            System.out.print("Enter Price : ");
            double price = in.nextDouble();
            System.out.print("Enter Quantity : ");
            int quantity = in.nextInt();

            Product product = new Product(productId, name, price, quantity);

            ArrayList<Product> list = readProduct();

            for(Product p : list) {
                if(p.getProductId() == productId) {
                    System.out.println("Product id already exists");
                }
            }

            list.add(product);
            writeProduct(list);

            System.out.println("Product Added");
        } catch (Exception e) {
            System.out.println("Error adding product" + e.getMessage());
        }
    }

    public static void viewProduct() {
        try {
            ArrayList<Product> list = readProduct();

            if(list.isEmpty()){
                System.out.println("No Product");
            }

            for (Product p : list) {
                System.out.println();
                System.out.println(p);
                System.out.println();
            }
        } catch (Exception e) {
            System.out.println("Error viewing product " + e.getMessage());
        }
    }

    public static void searchProduct() {
        try {
            System.out.print("Enter id : ");
            int id = in.nextInt();

            ArrayList<Product> list = readProduct();

            boolean found = false;
            for (Product p : list) {
                if(p.getProductId() == id) {
                    System.out.println(p);
                    found = true;
                    break;
                }
            }

            if(!found) {
                System.out.println("Product not found");
            }
        } catch (Exception e) {
            System.out.println("Error searching" + e.getMessage());
        }
    }

    public static void updateProduct() {
        try {
            System.out.print("Enter product id : ");
            int id = in.nextInt();

            ArrayList<Product> list = readProduct();
            boolean found = false;

            for (Product p : list) {
                if(p.getProductId() == id) {
                    found = true;
                    System.out.println(p);

                    System.out.print("Enter new Price : ");
                    double newprice = in.nextDouble();

                    System.out.print("Enter new Quantity : ");
                    int newquantity = in.nextInt();

                    p.setPrice(newprice);
                    p.setQuantity(newquantity);

                    writeProduct(list);
                    System.out.println("Product Updated...");
                    break;
                }

                if(!found) {
                    System.out.println("Product not found");
                }
            }
        } catch (Exception e) {
            System.out.println("Error on updating" + e.getMessage());
        }
    }

    public static void deleteProduct() {
        try {
            System.out.print("Enter id : ");
            int id = in.nextInt();

            ArrayList<Product> list = readProduct();

            boolean removed = false;
            Product toRemove = null;

            for (Product p : list) {
                if (p.getProductId() == id) {
                    toRemove = p;
                    break; // found the product, exit loop
                }
            }

            if (toRemove != null) {
                list.remove(toRemove);
                removed = true;
            }

            if (removed) {
                writeProduct(list);
                System.out.println("Product deleted");
            } else {
                System.out.println("Product not found.");
            }

        } catch (Exception e) {
            System.out.println("Exception on deletion : " + e.getMessage());
        }
    }

    public static ArrayList<Product> readProduct() {
        ArrayList<Product> list = new ArrayList<>();

        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(file))) {
            list = (ArrayList<Product>) ois.readObject();
        } catch (FileNotFoundException fe) {
            System.out.println("File not found : " + fe.getMessage());
        } catch (Exception e) {
            System.out.println("Exception : " + e.getMessage());
        }
        return list;
    }

    public static void writeProduct(ArrayList<Product> list) {
        try(ObjectOutputStream oss = new ObjectOutputStream(new FileOutputStream(file))) {
            oss.writeObject(list);
        } catch (Exception e) {
            System.out.println("Error on writing : " + e.getMessage());
        }
    }
}
